# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import dupr_backend
from dupr_backend.models.player_rating_overtime import PlayerRatingOvertime  # noqa: E501
from dupr_backend.rest import ApiException

class TestPlayerRatingOvertime(unittest.TestCase):
    """PlayerRatingOvertime unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PlayerRatingOvertime
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayerRatingOvertime`
        """
        model = dupr_backend.models.player_rating_overtime.PlayerRatingOvertime()  # noqa: E501
        if include_optional :
            return PlayerRatingOvertime(
                player_id = 56, 
                rating_history = [
                    dupr_backend.models.history.History(
                        changed_by_admin = True, 
                        date = 'yyyy-MM-dd', 
                        match_date = 'yyyy-MM-dd', 
                        rating = 1.337, )
                    ], 
                type = 'DOUBLES'
            )
        else :
            return PlayerRatingOvertime(
                player_id = 56,
                rating_history = [
                    dupr_backend.models.history.History(
                        changed_by_admin = True, 
                        date = 'yyyy-MM-dd', 
                        match_date = 'yyyy-MM-dd', 
                        rating = 1.337, )
                    ],
                type = 'DOUBLES',
        )
        """

    def testPlayerRatingOvertime(self):
        """Test PlayerRatingOvertime"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
