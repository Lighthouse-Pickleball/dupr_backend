# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.milp_division_request import MILPDivisionRequest

class TestMILPDivisionRequest(unittest.TestCase):
    """MILPDivisionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MILPDivisionRequest:
        """Test MILPDivisionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MILPDivisionRequest`
        """
        model = MILPDivisionRequest()
        if include_optional:
            return MILPDivisionRequest(
                day1_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                day2_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                division_name = 'Stillwater Pickleball',
                division_type = 'DUPR12/DUPR_OPEN/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22',
                entry_fee = 50.0,
                max_teams = 10,
                max_waitlist = 3,
                prize = 500.0,
                registration_period = [yyyy-mm-dd, yyyy-mm-dd]
            )
        else:
            return MILPDivisionRequest(
                day1_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                division_type = 'DUPR12/DUPR_OPEN/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22',
                prize = 500.0,
                registration_period = [yyyy-mm-dd, yyyy-mm-dd],
        )
        """

    def testMILPDivisionRequest(self):
        """Test MILPDivisionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
