# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import dupr_backend
from dupr_backend.models.array_wrapper_of_informative_banner_responce import ArrayWrapperOfInformativeBannerResponce  # noqa: E501
from dupr_backend.rest import ApiException

class TestArrayWrapperOfInformativeBannerResponce(unittest.TestCase):
    """ArrayWrapperOfInformativeBannerResponce unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ArrayWrapperOfInformativeBannerResponce
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayWrapperOfInformativeBannerResponce`
        """
        model = dupr_backend.models.array_wrapper_of_informative_banner_responce.ArrayWrapperOfInformativeBannerResponce()  # noqa: E501
        if include_optional :
            return ArrayWrapperOfInformativeBannerResponce(
                message = 'Show this message to user.', 
                results = [
                    dupr_backend.models.informative_banner_responce.InformativeBannerResponce(
                        banner_id = 56, 
                        description = dupr_backend.models.banner_content_responce.BannerContentResponce(
                            content = '', 
                            content_id = 56, 
                            content_type = '', 
                            footer = '', 
                            footer_type = '', 
                            header = '', 
                            header_type = '', ), 
                        end_date_time = '', 
                        start_date_time = '', 
                        status = 'ACTIVE', 
                        title = '', )
                    ], 
                status = 'FAILURE'
            )
        else :
            return ArrayWrapperOfInformativeBannerResponce(
        )
        """

    def testArrayWrapperOfInformativeBannerResponce(self):
        """Test ArrayWrapperOfInformativeBannerResponce"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
