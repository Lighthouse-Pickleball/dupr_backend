# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.participant import Participant

class TestParticipant(unittest.TestCase):
    """Participant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Participant:
        """Test Participant
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Participant`
        """
        model = Participant()
        if include_optional:
            return Participant(
                id = 26518181881,
                full_name = 'Brian Lara',
                username = 'X AE A-XII',
                display_username = True,
                partner_status = 'NOT_ADDED/CONFIRMED/NOT_CONFIRMED/PAYMENT_DUE',
                status = 'NOT_ADDED/CONFIRMED/NOT_CONFIRMED/PAYMENT_DUE',
                payment_due = '2021-12-01',
                payment_status = 'PENDING/COMPLETE',
                is_registered = False,
                is_wait_listed = True,
                is_c_lub_member = True,
                payment_refunded = True,
                refund_amount = true,
                is_substitute = True,
                substitute = True,
                registered = True,
                wait_listed = True,
                club_member = True
            )
        else:
            return Participant(
                full_name = 'Brian Lara',
                partner_status = 'NOT_ADDED/CONFIRMED/NOT_CONFIRMED/PAYMENT_DUE',
                is_registered = False,
                is_wait_listed = True,
                is_c_lub_member = True,
                payment_refunded = True,
                refund_amount = true,
                is_substitute = True,
        )
        """

    def testParticipant(self):
        """Test Participant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
