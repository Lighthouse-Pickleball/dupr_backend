# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import dupr_backend
from dupr_backend.models.geometry import Geometry  # noqa: E501
from dupr_backend.rest import ApiException

class TestGeometry(unittest.TestCase):
    """Geometry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Geometry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Geometry`
        """
        model = dupr_backend.models.geometry.Geometry()  # noqa: E501
        if include_optional :
            return Geometry(
                bounds = dupr_backend.models.bounds.Bounds(
                    northeast = dupr_backend.models.lat_lng.LatLng(
                        lat = 1.337, 
                        lng = 1.337, ), 
                    southwest = dupr_backend.models.lat_lng.LatLng(
                        lat = 1.337, 
                        lng = 1.337, ), ), 
                location = dupr_backend.models.lat_lng.LatLng(
                    lat = 1.337, 
                    lng = 1.337, ), 
                location_type = 'APPROXIMATE', 
                viewport = dupr_backend.models.bounds.Bounds(
                    northeast = dupr_backend.models.lat_lng.LatLng(
                        lat = 1.337, 
                        lng = 1.337, ), 
                    southwest = dupr_backend.models.lat_lng.LatLng(
                        lat = 1.337, 
                        lng = 1.337, ), )
            )
        else :
            return Geometry(
        )
        """

    def testGeometry(self):
        """Test Geometry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
