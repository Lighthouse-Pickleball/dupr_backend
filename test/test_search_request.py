# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.search_request import SearchRequest

class TestSearchRequest(unittest.TestCase):
    """SearchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchRequest:
        """Test SearchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchRequest`
        """
        model = SearchRequest()
        if include_optional:
            return SearchRequest(
                offset = 56,
                limit = 56,
                query = '0',
                exclude = [
                    56
                    ],
                filter = dupr_backend.models.search_filter.SearchFilter(
                    rating = dupr_backend.models.rating_filter.RatingFilter(
                        min_rating = 2.3, 
                        max_rating = 3.3, 
                        type = 'DOUBLES', 
                        category = 'DUPR', ), 
                    gender = 'MALE', 
                    lat = 72.34654645455, 
                    lng = 19.55151584984, 
                    radius_in_meters = 16093.4, 
                    age_range = dupr_backend.models.age_range_filter.AgeRangeFilter(
                        min_age = 18, 
                        max_age = 25, ), ),
                exclude_club_members = dupr_backend.models.exclude_club_members.ExcludeClubMembers(
                    club_id = 7828935307, 
                    roles = ORGANIZER/DIRECTOR, ),
                include_unclaimed_players = True,
                bracket_id = 7828935307,
                page_source = 'LD_ADD_PARTICIPANT',
                verified_email = True
            )
        else:
            return SearchRequest(
                offset = 56,
                limit = 56,
                filter = dupr_backend.models.search_filter.SearchFilter(
                    rating = dupr_backend.models.rating_filter.RatingFilter(
                        min_rating = 2.3, 
                        max_rating = 3.3, 
                        type = 'DOUBLES', 
                        category = 'DUPR', ), 
                    gender = 'MALE', 
                    lat = 72.34654645455, 
                    lng = 19.55151584984, 
                    radius_in_meters = 16093.4, 
                    age_range = dupr_backend.models.age_range_filter.AgeRangeFilter(
                        min_age = 18, 
                        max_age = 25, ), ),
                include_unclaimed_players = True,
        )
        """

    def testSearchRequest(self):
        """Test SearchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
