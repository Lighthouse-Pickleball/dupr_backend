# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.team_response import TeamResponse

class TestTeamResponse(unittest.TestCase):
    """TeamResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TeamResponse:
        """Test TeamResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TeamResponse`
        """
        model = TeamResponse()
        if include_optional:
            return TeamResponse(
                delta = '-0.682',
                game1 = 11,
                game2 = -1,
                game3 = -1,
                game4 = -1,
                game5 = -1,
                id = 56,
                player1 = dupr_backend.models.team_player_response.TeamPlayerResponse(
                    allow_substitution = True, 
                    dupr_id = 'https://dupr-dev.s3.amazonaws.com/profile/image.png', 
                    full_name = 'Brian Lara', 
                    id = 26518181881, 
                    image_url = '', 
                    post_match_rating = dupr_backend.models.post_match_rating.PostMatchRating(
                        doubles = 1.337, 
                        singles = 1.337, ), 
                    validated_match = True, ),
                player2 = dupr_backend.models.team_player_response.TeamPlayerResponse(
                    allow_substitution = True, 
                    dupr_id = 'https://dupr-dev.s3.amazonaws.com/profile/image.png', 
                    full_name = 'Brian Lara', 
                    id = 26518181881, 
                    image_url = '', 
                    post_match_rating = dupr_backend.models.post_match_rating.PostMatchRating(
                        doubles = 1.337, 
                        singles = 1.337, ), 
                    validated_match = True, ),
                pre_match_rating_and_impact = dupr_backend.models.pre_match_rating_and_impact.PreMatchRatingAndImpact(
                    match_double_rating_impact_player1 = 1.337, 
                    match_double_rating_impact_player2 = 1.337, 
                    match_single_rating_impact_player1 = 1.337, 
                    match_single_rating_impact_player2 = 1.337, 
                    pre_match_double_rating_player1 = 1.337, 
                    pre_match_double_rating_player2 = 1.337, 
                    pre_match_single_rating_player1 = 1.337, 
                    pre_match_single_rating_player2 = 1.337, ),
                serial = 1,
                team_rating = '4.659',
                winner = True
            )
        else:
            return TeamResponse(
                delta = '-0.682',
                game1 = 11,
                game2 = -1,
                game3 = -1,
                game4 = -1,
                game5 = -1,
                player1 = dupr_backend.models.team_player_response.TeamPlayerResponse(
                    allow_substitution = True, 
                    dupr_id = 'https://dupr-dev.s3.amazonaws.com/profile/image.png', 
                    full_name = 'Brian Lara', 
                    id = 26518181881, 
                    image_url = '', 
                    post_match_rating = dupr_backend.models.post_match_rating.PostMatchRating(
                        doubles = 1.337, 
                        singles = 1.337, ), 
                    validated_match = True, ),
                pre_match_rating_and_impact = dupr_backend.models.pre_match_rating_and_impact.PreMatchRatingAndImpact(
                    match_double_rating_impact_player1 = 1.337, 
                    match_double_rating_impact_player2 = 1.337, 
                    match_single_rating_impact_player1 = 1.337, 
                    match_single_rating_impact_player2 = 1.337, 
                    pre_match_double_rating_player1 = 1.337, 
                    pre_match_double_rating_player2 = 1.337, 
                    pre_match_single_rating_player1 = 1.337, 
                    pre_match_single_rating_player2 = 1.337, ),
                serial = 1,
                team_rating = '4.659',
                winner = True,
        )
        """

    def testTeamResponse(self):
        """Test TeamResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
