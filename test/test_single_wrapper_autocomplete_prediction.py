# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.single_wrapper_autocomplete_prediction import SingleWrapperAutocompletePrediction

class TestSingleWrapperAutocompletePrediction(unittest.TestCase):
    """SingleWrapperAutocompletePrediction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleWrapperAutocompletePrediction:
        """Test SingleWrapperAutocompletePrediction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleWrapperAutocompletePrediction`
        """
        model = SingleWrapperAutocompletePrediction()
        if include_optional:
            return SingleWrapperAutocompletePrediction(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                result = [
                    dupr_backend.models.autocomplete_prediction.AutocompletePrediction(
                        description = '', 
                        place_id = '', 
                        types = [
                            ''
                            ], 
                        terms = [
                            dupr_backend.models.term.Term(
                                offset = 56, 
                                value = '', )
                            ], 
                        distance_meters = 56, 
                        matched_substrings = [
                            dupr_backend.models.matched_substring.MatchedSubstring(
                                length = 56, 
                                offset = 56, )
                            ], 
                        structured_formatting = dupr_backend.models.autocomplete_structured_formatting.AutocompleteStructuredFormatting(
                            main_text = '', 
                            main_text_matched_substrings = [
                                dupr_backend.models.matched_substring.MatchedSubstring(
                                    length = 56, 
                                    offset = 56, )
                                ], 
                            secondary_text = '', ), )
                    ]
            )
        else:
            return SingleWrapperAutocompletePrediction(
        )
        """

    def testSingleWrapperAutocompletePrediction(self):
        """Test SingleWrapperAutocompletePrediction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
