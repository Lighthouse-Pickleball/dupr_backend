# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.single_wrapper_match_response import SingleWrapperMatchResponse

class TestSingleWrapperMatchResponse(unittest.TestCase):
    """SingleWrapperMatchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleWrapperMatchResponse:
        """Test SingleWrapperMatchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleWrapperMatchResponse`
        """
        model = SingleWrapperMatchResponse()
        if include_optional:
            return SingleWrapperMatchResponse(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                result = dupr_backend.models.match_response.MatchResponse(
                    id = 7737603024, 
                    match_id = 7737603024, 
                    user_id = 231312312312, 
                    display_identity = 'IS20MDL2', 
                    venue = 'Dreamland Pickleball', 
                    location = 'Newport Beach, CA', 
                    match_score_added = True, 
                    tournament = 'Newport Beach Doubles Shootout', 
                    league = 'Example League', 
                    event_date = 'yyyy-MM-dd', 
                    event_format = 'SINGLES', 
                    score_format = dupr_backend.models.score_format_response.ScoreFormatResponse(
                        id = 56, 
                        format = 'Best 2 out of 3 Games to 11', 
                        variant = 'Game 3 to 15 or until win by 2', 
                        games = 1, 
                        winning_score = 11, 
                        priority = 1, ), 
                    confirmed = True, 
                    teams = [
                        dupr_backend.models.team_response.TeamResponse(
                            id = 56, 
                            serial = 1, 
                            player1 = dupr_backend.models.team_player_response.TeamPlayerResponse(
                                id = 26518181881, 
                                full_name = 'Brian Lara', 
                                dupr_id = 'https://dupr-dev.s3.amazonaws.com/profile/image.png', 
                                image_url = '', 
                                allow_substitution = True, 
                                post_match_rating = dupr_backend.models.post_match_rating.PostMatchRating(
                                    singles = 1.337, 
                                    doubles = 1.337, ), 
                                validated_match = True, ), 
                            player2 = dupr_backend.models.team_player_response.TeamPlayerResponse(
                                id = 26518181881, 
                                full_name = 'Brian Lara', 
                                dupr_id = 'https://dupr-dev.s3.amazonaws.com/profile/image.png', 
                                image_url = '', 
                                allow_substitution = True, 
                                validated_match = True, ), 
                            game1 = 11, 
                            game2 = -1, 
                            game3 = -1, 
                            game4 = -1, 
                            game5 = -1, 
                            winner = True, 
                            delta = '-0.682', 
                            team_rating = '4.659', 
                            pre_match_rating_and_impact = 3.5, )
                        ], 
                    created = '2020-03-04T17:21:16.000Z', 
                    modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    event_name = 'event name', 
                    match_source = 'DUPR/MANUAL/LEAGUE', 
                    club_id = 7737603024, 
                    league_id = 7396161624, 
                    bracket_id = 6806605627, 
                    league_match_id = 2090230022, 
                    no_of_games = 2, 
                    status = '2', 
                    match_type = 'SIDE_OUT/RALLY', 
                    elo_calculated = True, 
                    initialization = True, 
                    validator = dupr_backend.models.basic_user_info.BasicUserInfo(
                        id = 56, 
                        name = '', 
                        email = '', 
                        referral_code = '', ), 
                    creator = dupr_backend.models.basic_user_info.BasicUserInfo(
                        id = 56, 
                        name = '', 
                        email = '', 
                        referral_code = '', ), 
                    client_id = 45, 
                    club_name = 'event name', 
                    client_name = 'event name', )
            )
        else:
            return SingleWrapperMatchResponse(
        )
        """

    def testSingleWrapperMatchResponse(self):
        """Test SingleWrapperMatchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
