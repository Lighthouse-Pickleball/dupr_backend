# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import dupr_backend
from dupr_backend.models.single_wrapper_of_pre_calculated_user_statistics_response import SingleWrapperOfPreCalculatedUserStatisticsResponse  # noqa: E501
from dupr_backend.rest import ApiException

class TestSingleWrapperOfPreCalculatedUserStatisticsResponse(unittest.TestCase):
    """SingleWrapperOfPreCalculatedUserStatisticsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SingleWrapperOfPreCalculatedUserStatisticsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleWrapperOfPreCalculatedUserStatisticsResponse`
        """
        model = dupr_backend.models.single_wrapper_of_pre_calculated_user_statistics_response.SingleWrapperOfPreCalculatedUserStatisticsResponse()  # noqa: E501
        if include_optional :
            return SingleWrapperOfPreCalculatedUserStatisticsResponse(
                message = 'Show this message to user.', 
                result = dupr_backend.models.pre_calculated_user_statistics_response.PreCalculatedUserStatisticsResponse(
                    doubles = dupr_backend.models.match_ratings.MatchRatings(
                        average_opponent_dupr = '3.254', 
                        average_partner_dupr = '6.391', 
                        average_points_won_percent = '67%', 
                        half_life = '3.0', 
                        losses = 12, 
                        wins = 4, ), 
                    resul_overview = dupr_backend.models.ratings_overview_response.RatingsOverviewResponse(
                        losses = 56, 
                        pending = 56, 
                        wins = 56, ), 
                    singles = dupr_backend.models.match_ratings.MatchRatings(
                        average_opponent_dupr = '3.254', 
                        average_partner_dupr = '6.391', 
                        average_points_won_percent = '67%', 
                        half_life = '3.0', 
                        losses = 12, 
                        wins = 4, ), ), 
                status = 'FAILURE'
            )
        else :
            return SingleWrapperOfPreCalculatedUserStatisticsResponse(
        )
        """

    def testSingleWrapperOfPreCalculatedUserStatisticsResponse(self):
        """Test SingleWrapperOfPreCalculatedUserStatisticsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
