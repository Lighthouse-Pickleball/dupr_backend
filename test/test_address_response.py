# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.address_response import AddressResponse

class TestAddressResponse(unittest.TestCase):
    """AddressResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddressResponse:
        """Test AddressResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddressResponse`
        """
        model = AddressResponse()
        if include_optional:
            return AddressResponse(
                id = 12385789,
                address_line = 'Apartment, Room, PO Box numbers (optional)',
                short_address = 'Center Valley, PA, US',
                formatted_address = '5800',
                latitude = 33.194791,
                longitude = -117.048582,
                place_id = '',
                precision = '',
                status = '',
                types = '',
                create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AddressResponse(
                short_address = 'Center Valley, PA, US',
                formatted_address = '5800',
                latitude = 33.194791,
                longitude = -117.048582,
                create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testAddressResponse(self):
        """Test AddressResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
