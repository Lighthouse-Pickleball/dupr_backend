# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.array_wrapper_geocoding_result import ArrayWrapperGeocodingResult

class TestArrayWrapperGeocodingResult(unittest.TestCase):
    """ArrayWrapperGeocodingResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayWrapperGeocodingResult:
        """Test ArrayWrapperGeocodingResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayWrapperGeocodingResult`
        """
        model = ArrayWrapperGeocodingResult()
        if include_optional:
            return ArrayWrapperGeocodingResult(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                results = [
                    dupr_backend.models.geocoding_result.GeocodingResult(
                        address_components = [
                            dupr_backend.models.address_component.AddressComponent(
                                long_name = '', 
                                short_name = '', 
                                types = [
                                    'street_address'
                                    ], )
                            ], 
                        formatted_address = '', 
                        postcode_localities = [
                            ''
                            ], 
                        geometry = dupr_backend.models.geometry.Geometry(
                            bounds = dupr_backend.models.bounds.Bounds(
                                northeast = dupr_backend.models.lat_lng.LatLng(
                                    lat = 1.337, 
                                    lng = 1.337, ), 
                                southwest = dupr_backend.models.lat_lng.LatLng(
                                    lat = 1.337, 
                                    lng = 1.337, ), ), 
                            location = , 
                            location_type = 'ROOFTOP', 
                            viewport = dupr_backend.models.bounds.Bounds(), ), 
                        types = [
                            'street_address'
                            ], 
                        partial_match = True, 
                        place_id = '', 
                        plus_code = dupr_backend.models.plus_code.PlusCode(
                            global_code = '', 
                            compound_code = '', ), )
                    ]
            )
        else:
            return ArrayWrapperGeocodingResult(
        )
        """

    def testArrayWrapperGeocodingResult(self):
        """Test ArrayWrapperGeocodingResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
