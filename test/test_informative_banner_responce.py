# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.informative_banner_responce import InformativeBannerResponce

class TestInformativeBannerResponce(unittest.TestCase):
    """InformativeBannerResponce unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InformativeBannerResponce:
        """Test InformativeBannerResponce
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InformativeBannerResponce`
        """
        model = InformativeBannerResponce()
        if include_optional:
            return InformativeBannerResponce(
                banner_id = 56,
                description = dupr_backend.models.banner_content_responce.BannerContentResponce(
                    content_id = 56, 
                    header = '', 
                    header_type = '', 
                    content = '', 
                    content_type = '', 
                    footer = '', 
                    footer_type = '', ),
                title = '',
                status = 'ACTIVE',
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return InformativeBannerResponce(
        )
        """

    def testInformativeBannerResponce(self):
        """Test InformativeBannerResponce"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
