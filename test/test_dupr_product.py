# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.dupr_product import DuprProduct

class TestDuprProduct(unittest.TestCase):
    """DuprProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DuprProduct:
        """Test DuprProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DuprProduct`
        """
        model = DuprProduct()
        if include_optional:
            return DuprProduct(
                product_id = '',
                external_product_id = '',
                price_id = '',
                display_name = '',
                price = 56,
                period = 'P2Y3M',
                promotion = dupr_backend.models.promotion.Promotion(
                    dupr_discount = dupr_backend.models.dupr_discount.DuprDiscount(
                        price_reduction = 56, 
                        trial_days = 56, ), 
                    benefactor = dupr_backend.models.benefactor.Benefactor(
                        id = 56, 
                        display_name = '', ), )
            )
        else:
            return DuprProduct(
                product_id = '',
                external_product_id = '',
                price_id = '',
                display_name = '',
                price = 56,
                period = 'P2Y3M',
                promotion = dupr_backend.models.promotion.Promotion(
                    dupr_discount = dupr_backend.models.dupr_discount.DuprDiscount(
                        price_reduction = 56, 
                        trial_days = 56, ), 
                    benefactor = dupr_backend.models.benefactor.Benefactor(
                        id = 56, 
                        display_name = '', ), ),
        )
        """

    def testDuprProduct(self):
        """Test DuprProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
