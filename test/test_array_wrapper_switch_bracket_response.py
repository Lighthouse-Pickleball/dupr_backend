# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.array_wrapper_switch_bracket_response import ArrayWrapperSwitchBracketResponse

class TestArrayWrapperSwitchBracketResponse(unittest.TestCase):
    """ArrayWrapperSwitchBracketResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayWrapperSwitchBracketResponse:
        """Test ArrayWrapperSwitchBracketResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayWrapperSwitchBracketResponse`
        """
        model = ArrayWrapperSwitchBracketResponse()
        if include_optional:
            return ArrayWrapperSwitchBracketResponse(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                results = [
                    dupr_backend.models.switch_bracket_response.SwitchBracketResponse(
                        user_id = ['26518181881'], 
                        is_success = False, 
                        failed_reason = '['26518181881']', 
                        registration_id = ['26518181881'], 
                        is_source_re_seeded = True, 
                        is_target_re_seeded = True, 
                        source_re_seeded = True, 
                        target_re_seeded = True, )
                    ]
            )
        else:
            return ArrayWrapperSwitchBracketResponse(
        )
        """

    def testArrayWrapperSwitchBracketResponse(self):
        """Test ArrayWrapperSwitchBracketResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
