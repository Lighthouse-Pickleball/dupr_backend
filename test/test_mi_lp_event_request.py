# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.mi_lp_event_request import MiLPEventRequest

class TestMiLPEventRequest(unittest.TestCase):
    """MiLPEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MiLPEventRequest:
        """Test MiLPEventRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MiLPEventRequest`
        """
        model = MiLPEventRequest()
        if include_optional:
            return MiLPEventRequest(
                event_name = 'Stillwater Pickleball',
                organizers = [
                    dupr_backend.models.milp_event_organizer_request.MILPEventOrganizerRequest(
                        user_id = 45785789, 
                        status = 'ACTIVE/CANCELLED', )
                    ],
                default_entry_fee = 500,
                default_max_teams = 10,
                default_max_waitlist = 3,
                description = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                address_id = 5156151658,
                event_type = 'STANDARD/MARQUE/SHOWDOWN',
                time_zone = 'America/New_York',
                duration = ['yyyy-mm-dd','yyyy-mm-dd'],
                divisions = [
                    dupr_backend.models.milp_division_request.MILPDivisionRequest(
                        division_type = 'DUPR12/DUPR_OPEN/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22', 
                        division_name = 'Stillwater Pickleball', 
                        max_teams = 10, 
                        max_waitlist = 3, 
                        day1_start = 'yyyy-mm-ddTHH:mm:ss', 
                        day2_start = 'yyyy-mm-ddTHH:mm:ss', 
                        registration_period = ['yyyy-mm-dd','yyyy-mm-dd'], 
                        entry_fee = 50, 
                        prize = 500, )
                    ],
                club_id = 45785789,
                status = 'ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED'
            )
        else:
            return MiLPEventRequest(
                event_name = 'Stillwater Pickleball',
                organizers = [
                    dupr_backend.models.milp_event_organizer_request.MILPEventOrganizerRequest(
                        user_id = 45785789, 
                        status = 'ACTIVE/CANCELLED', )
                    ],
                default_entry_fee = 500,
                default_max_teams = 10,
                default_max_waitlist = 3,
                address_id = 5156151658,
                event_type = 'STANDARD/MARQUE/SHOWDOWN',
                time_zone = 'America/New_York',
                duration = ['yyyy-mm-dd','yyyy-mm-dd'],
                divisions = [
                    dupr_backend.models.milp_division_request.MILPDivisionRequest(
                        division_type = 'DUPR12/DUPR_OPEN/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22', 
                        division_name = 'Stillwater Pickleball', 
                        max_teams = 10, 
                        max_waitlist = 3, 
                        day1_start = 'yyyy-mm-ddTHH:mm:ss', 
                        day2_start = 'yyyy-mm-ddTHH:mm:ss', 
                        registration_period = ['yyyy-mm-dd','yyyy-mm-dd'], 
                        entry_fee = 50, 
                        prize = 500, )
                    ],
                club_id = 45785789,
        )
        """

    def testMiLPEventRequest(self):
        """Test MiLPEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
