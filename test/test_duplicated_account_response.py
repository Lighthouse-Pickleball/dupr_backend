# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.duplicated_account_response import DuplicatedAccountResponse

class TestDuplicatedAccountResponse(unittest.TestCase):
    """DuplicatedAccountResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DuplicatedAccountResponse:
        """Test DuplicatedAccountResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DuplicatedAccountResponse`
        """
        model = DuplicatedAccountResponse()
        if include_optional:
            return DuplicatedAccountResponse(
                player1 = dupr_backend.models.duplicated_player.DuplicatedPlayer(
                    birthday = '', 
                    dupr_id = '', 
                    email = '', 
                    first_name = '', 
                    full_name = '', 
                    gender = 'FEMALE', 
                    hand = 'BOTH', 
                    id = 56, 
                    last_name = '', 
                    status = 'ACTIVE', 
                    verified_email = True, ),
                player2 = dupr_backend.models.duplicated_player.DuplicatedPlayer(
                    birthday = '', 
                    dupr_id = '', 
                    email = '', 
                    first_name = '', 
                    full_name = '', 
                    gender = 'FEMALE', 
                    hand = 'BOTH', 
                    id = 56, 
                    last_name = '', 
                    status = 'ACTIVE', 
                    verified_email = True, ),
                probability = ''
            )
        else:
            return DuplicatedAccountResponse(
                player1 = dupr_backend.models.duplicated_player.DuplicatedPlayer(
                    birthday = '', 
                    dupr_id = '', 
                    email = '', 
                    first_name = '', 
                    full_name = '', 
                    gender = 'FEMALE', 
                    hand = 'BOTH', 
                    id = 56, 
                    last_name = '', 
                    status = 'ACTIVE', 
                    verified_email = True, ),
                player2 = dupr_backend.models.duplicated_player.DuplicatedPlayer(
                    birthday = '', 
                    dupr_id = '', 
                    email = '', 
                    first_name = '', 
                    full_name = '', 
                    gender = 'FEMALE', 
                    hand = 'BOTH', 
                    id = 56, 
                    last_name = '', 
                    status = 'ACTIVE', 
                    verified_email = True, ),
                probability = '',
        )
        """

    def testDuplicatedAccountResponse(self):
        """Test DuplicatedAccountResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
