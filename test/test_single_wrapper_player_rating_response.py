# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.single_wrapper_player_rating_response import SingleWrapperPlayerRatingResponse

class TestSingleWrapperPlayerRatingResponse(unittest.TestCase):
    """SingleWrapperPlayerRatingResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleWrapperPlayerRatingResponse:
        """Test SingleWrapperPlayerRatingResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleWrapperPlayerRatingResponse`
        """
        model = SingleWrapperPlayerRatingResponse()
        if include_optional:
            return SingleWrapperPlayerRatingResponse(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                result = dupr_backend.models.player_rating_response.PlayerRatingResponse(
                    singles = '4.125', 
                    singles_verified = '4.1', 
                    singles_provisional = True, 
                    singles_reliability_score = 10, 
                    doubles = '2.864', 
                    doubles_verified = '2.75', 
                    doubles_provisional = True, 
                    doubles_reliability_score = 10, 
                    default_rating = 'DOUBLES', 
                    provisional_ratings = dupr_backend.models.provisional_rating.ProvisionalRating(
                        singles_rating = 3.5, 
                        doubles_rating = 3.5, 
                        coach = { id: 12345, metadata: { name: example }}, ), )
            )
        else:
            return SingleWrapperPlayerRatingResponse(
        )
        """

    def testSingleWrapperPlayerRatingResponse(self):
        """Test SingleWrapperPlayerRatingResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
