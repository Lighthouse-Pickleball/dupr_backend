# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.search_leagues_request import SearchLeaguesRequest

class TestSearchLeaguesRequest(unittest.TestCase):
    """SearchLeaguesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchLeaguesRequest:
        """Test SearchLeaguesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchLeaguesRequest`
        """
        model = SearchLeaguesRequest()
        if include_optional:
            return SearchLeaguesRequest(
                offset = 56,
                limit = 56,
                query = '0',
                lat = 72.34654645455,
                lng = 19.55151584984,
                radius_in_meters = 16093.4,
                filters = dupr_backend.models.league_filter.LeagueFilter(
                    skill_level = dupr_backend.models.skill_level_filter.SkillLevelFilter(
                        max_rating = 4.2, 
                        min_rating = 3.2, ), 
                    elimination = ['DOUBLE_PREVENTED','ROUND_ROBIN'], 
                    event_format = ['SINGLES','DOUBLES'], 
                    player_group = ['MEN','WOMEN','MIXED'], 
                    city = ['San Francisco','Great Falls'], 
                    status = ['ACTIVE','IN_ACTIVE'], 
                    duration_status = ['COMPLETE','IN_PROGRESS','UPCOMING'], 
                    registration_status = ['OPEN','NOT_STARTED','CLOSED'], ),
                is_near_me = True
            )
        else:
            return SearchLeaguesRequest(
                offset = 56,
                limit = 56,
                lat = 72.34654645455,
                lng = 19.55151584984,
        )
        """

    def testSearchLeaguesRequest(self):
        """Test SearchLeaguesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
