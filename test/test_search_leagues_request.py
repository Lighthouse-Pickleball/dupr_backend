# coding: utf-8

"""
    DUPR Middleware

    Application REST APIs

    The version of the OpenAPI document: v1.0 alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import dupr_backend
from dupr_backend.models.search_leagues_request import SearchLeaguesRequest  # noqa: E501
from dupr_backend.rest import ApiException

class TestSearchLeaguesRequest(unittest.TestCase):
    """SearchLeaguesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SearchLeaguesRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchLeaguesRequest`
        """
        model = dupr_backend.models.search_leagues_request.SearchLeaguesRequest()  # noqa: E501
        if include_optional :
            return SearchLeaguesRequest(
                filters = dupr_backend.models.league_filter.LeagueFilter(
                    city = [San Francisco, Great Falls], 
                    duration_status = [COMPLETE, IN_PROGRESS, UPCOMING], 
                    elimination = [DOUBLE_PREVENTED, ROUND_ROBIN], 
                    event_format = [SINGLES, DOUBLES], 
                    player_group = [MEN, WOMEN, MIXED], 
                    registration_status = [OPEN, NOT_STARTED, CLOSED], 
                    skill_level = dupr_backend.models.skill_level_filter.SkillLevelFilter(
                        max_rating = 4.2, 
                        min_rating = 3.2, ), 
                    status = [ACTIVE, IN_ACTIVE], ), 
                is_near_me = True, 
                lat = 72.34654645455, 
                limit = 10, 
                lng = 19.55151584984, 
                offset = 0, 
                query = '*', 
                radius_in_meters = 16093.4
            )
        else :
            return SearchLeaguesRequest(
                limit = 10,
                offset = 0,
                query = '*',
        )
        """

    def testSearchLeaguesRequest(self):
        """Test SearchLeaguesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
