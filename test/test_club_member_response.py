# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.club_member_response import ClubMemberResponse

class TestClubMemberResponse(unittest.TestCase):
    """ClubMemberResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClubMemberResponse:
        """Test ClubMemberResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClubMemberResponse`
        """
        model = ClubMemberResponse()
        if include_optional:
            return ClubMemberResponse(
                id = 56,
                full_name = '',
                username = '',
                display_username = True,
                email = '',
                verified_email = True,
                iso_alpha2_code = '',
                phone = '',
                verified_phone = True,
                short_address = '',
                formatted_address = '',
                latitude = 1.337,
                longitude = 1.337,
                gender = 'MALE',
                birthdate = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                age = 56,
                hand = 'RIGHT',
                image_url = '',
                singles = '',
                singles_verified = '',
                singles_provisional = True,
                doubles = '',
                doubles_verified = '',
                doubles_provisional = True,
                default_rating = 'SINGLES',
                distance = '',
                distance_in_miles = 1.337,
                enable_privacy = True,
                status = 'ACTIVE',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                club_id = 56,
                roles = [
                    dupr_backend.models.club_role.ClubRole(
                        role_id = 56, 
                        role = 'PLAYER', 
                        approval_status = 'PENDING', 
                        club_id = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        request_by = 56, 
                        join_type = 'INVITATION', )
                    ],
                requested_by = 56,
                invitation_type = 'INVITATION',
                dupr_id = '',
                is_checked = True,
                provisional_singles_rating = 1.337,
                provisional_doubles_rating = 1.337,
                singles_reliability = 1.337,
                doubles_reliability = 1.337,
                location = '',
                checked = True
            )
        else:
            return ClubMemberResponse(
                id = 56,
                full_name = '',
                enable_privacy = True,
                club_id = 56,
                roles = [
                    dupr_backend.models.club_role.ClubRole(
                        role_id = 56, 
                        role = 'PLAYER', 
                        approval_status = 'PENDING', 
                        club_id = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        request_by = 56, 
                        join_type = 'INVITATION', )
                    ],
        )
        """

    def testClubMemberResponse(self):
        """Test ClubMemberResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
