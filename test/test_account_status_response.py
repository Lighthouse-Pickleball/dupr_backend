# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.account_status_response import AccountStatusResponse

class TestAccountStatusResponse(unittest.TestCase):
    """AccountStatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountStatusResponse:
        """Test AccountStatusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountStatusResponse`
        """
        model = AccountStatusResponse()
        if include_optional:
            return AccountStatusResponse(
                account_id = 6549864065,
                details_submitted = False,
                pending_requirement = False,
                errors = [{code=invalid_street_address, reason=The provided street address cannot be found. Please verify the street name and number are correct in "111 Boulevard Street", requirement=individual.address.line1}]
            )
        else:
            return AccountStatusResponse(
                details_submitted = False,
                pending_requirement = False,
                errors = [{code=invalid_street_address, reason=The provided street address cannot be found. Please verify the street name and number are correct in "111 Boulevard Street", requirement=individual.address.line1}],
        )
        """

    def testAccountStatusResponse(self):
        """Test AccountStatusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
