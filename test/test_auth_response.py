# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.auth_response import AuthResponse

class TestAuthResponse(unittest.TestCase):
    """AuthResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthResponse:
        """Test AuthResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthResponse`
        """
        model = AuthResponse()
        if include_optional:
            return AuthResponse(
                access_token = 'eyJhbGciOiJSUzUxMiJ9.',
                refresh_token = 'eyJhbGciOiJSUzUxMiJ9.',
                user = dupr_backend.models.user_response.UserResponse(
                    id = 45785789, 
                    full_name = 'John Doe', 
                    first_name = 'John', 
                    last_name = 'Doe', 
                    username = 'X AE A-XII', 
                    display_username = True, 
                    iso_code = 'US', 
                    phone = '+14445785789', 
                    is_valid_phone = True, 
                    email = 'user@exmaple.com', 
                    is_valid_email = True, 
                    image_url = 'https://dupr-dev.s3.us-east-1.amazonaws.com/users/profile.jpg', 
                    referral_code = 'GB0NV05E', 
                    birthdate = 'yyyy-MM-dd', 
                    gender = 'MALE', 
                    hand = 'RIGHT', 
                    role = dupr_backend.models.role_response.RoleResponse(
                        id = 424255123, 
                        role = 'PLAYER', 
                        permissions = {USER=[VIEW, MODIFY], TOURNAMENT=[OWN_VIEW, OWN_MODIFY, OWN_DELETE]}, ), 
                    stats = dupr_backend.models.player_rating_response.PlayerRatingResponse(
                        singles = '4.125', 
                        singles_verified = '4.1', 
                        singles_provisional = True, 
                        singles_reliability_score = 10, 
                        doubles = '2.864', 
                        doubles_verified = '2.75', 
                        doubles_provisional = True, 
                        doubles_reliability_score = 10, 
                        default_rating = 'DOUBLES', 
                        provisional_ratings = dupr_backend.models.provisional_rating.ProvisionalRating(
                            singles_rating = 3.5, 
                            doubles_rating = 3.5, 
                            coach = { id: 12345, metadata: { name: example }}, ), ), 
                    addresses = [
                        dupr_backend.models.address_response.AddressResponse(
                            id = 12385789, 
                            address_line = 'Apartment, Room, PO Box numbers (optional)', 
                            short_address = 'Center Valley, PA, US', 
                            formatted_address = '5800', 
                            latitude = 33.194791, 
                            longitude = -117.048582, 
                            place_id = '', 
                            precision = '', 
                            status = '', 
                            types = '', 
                            create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    active = True, 
                    user_preferences = dupr_backend.models.user_preferences_response.UserPreferencesResponse(
                        enable_sms = True, 
                        enable_email = True, 
                        enable_push = True, 
                        enable_privacy = True, 
                        enable_newsletter = True, ), 
                    paddle_brand = 'Selkirk Vanguard Hybrid S2', 
                    shoe_brand = 'Nike', 
                    apparel_brand = 'Puma', 
                    preferred_ball = 'Balls', 
                    preferred_side = 'LEFT/RIGHT/EITHER', 
                    restricted = True, 
                    lucra_connected = True, 
                    valid_email = True, 
                    valid_phone = True, )
            )
        else:
            return AuthResponse(
                access_token = 'eyJhbGciOiJSUzUxMiJ9.',
                refresh_token = 'eyJhbGciOiJSUzUxMiJ9.',
                user = dupr_backend.models.user_response.UserResponse(
                    id = 45785789, 
                    full_name = 'John Doe', 
                    first_name = 'John', 
                    last_name = 'Doe', 
                    username = 'X AE A-XII', 
                    display_username = True, 
                    iso_code = 'US', 
                    phone = '+14445785789', 
                    is_valid_phone = True, 
                    email = 'user@exmaple.com', 
                    is_valid_email = True, 
                    image_url = 'https://dupr-dev.s3.us-east-1.amazonaws.com/users/profile.jpg', 
                    referral_code = 'GB0NV05E', 
                    birthdate = 'yyyy-MM-dd', 
                    gender = 'MALE', 
                    hand = 'RIGHT', 
                    role = dupr_backend.models.role_response.RoleResponse(
                        id = 424255123, 
                        role = 'PLAYER', 
                        permissions = {USER=[VIEW, MODIFY], TOURNAMENT=[OWN_VIEW, OWN_MODIFY, OWN_DELETE]}, ), 
                    stats = dupr_backend.models.player_rating_response.PlayerRatingResponse(
                        singles = '4.125', 
                        singles_verified = '4.1', 
                        singles_provisional = True, 
                        singles_reliability_score = 10, 
                        doubles = '2.864', 
                        doubles_verified = '2.75', 
                        doubles_provisional = True, 
                        doubles_reliability_score = 10, 
                        default_rating = 'DOUBLES', 
                        provisional_ratings = dupr_backend.models.provisional_rating.ProvisionalRating(
                            singles_rating = 3.5, 
                            doubles_rating = 3.5, 
                            coach = { id: 12345, metadata: { name: example }}, ), ), 
                    addresses = [
                        dupr_backend.models.address_response.AddressResponse(
                            id = 12385789, 
                            address_line = 'Apartment, Room, PO Box numbers (optional)', 
                            short_address = 'Center Valley, PA, US', 
                            formatted_address = '5800', 
                            latitude = 33.194791, 
                            longitude = -117.048582, 
                            place_id = '', 
                            precision = '', 
                            status = '', 
                            types = '', 
                            create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    active = True, 
                    user_preferences = dupr_backend.models.user_preferences_response.UserPreferencesResponse(
                        enable_sms = True, 
                        enable_email = True, 
                        enable_push = True, 
                        enable_privacy = True, 
                        enable_newsletter = True, ), 
                    paddle_brand = 'Selkirk Vanguard Hybrid S2', 
                    shoe_brand = 'Nike', 
                    apparel_brand = 'Puma', 
                    preferred_ball = 'Balls', 
                    preferred_side = 'LEFT/RIGHT/EITHER', 
                    restricted = True, 
                    lucra_connected = True, 
                    valid_email = True, 
                    valid_phone = True, ),
        )
        """

    def testAuthResponse(self):
        """Test AuthResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
