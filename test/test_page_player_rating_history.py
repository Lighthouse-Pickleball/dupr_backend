# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.page_player_rating_history import PagePlayerRatingHistory

class TestPagePlayerRatingHistory(unittest.TestCase):
    """PagePlayerRatingHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PagePlayerRatingHistory:
        """Test PagePlayerRatingHistory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PagePlayerRatingHistory`
        """
        model = PagePlayerRatingHistory()
        if include_optional:
            return PagePlayerRatingHistory(
                offset = 90,
                limit = 10,
                total = 100,
                hits = [
                    dupr_backend.models.player_rating_history.PlayerRatingHistory(
                        rating_history_id = 56, 
                        user_id = 56, 
                        user_name = '', 
                        user_email = '', 
                        singles = 1.337, 
                        singles_provisional = True, 
                        doubles = 1.337, 
                        doubles_provisional = True, 
                        changed_by_admin = True, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        match_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status = 'ACTIVE', )
                    ],
                total_value_relation = 'GREATER_THAN_OR_EQUAL_TO',
                has_previous = True,
                empty = False,
                has_more = False
            )
        else:
            return PagePlayerRatingHistory(
                offset = 90,
                limit = 10,
                total = 100,
                total_value_relation = 'GREATER_THAN_OR_EQUAL_TO',
                has_previous = True,
                empty = False,
                has_more = False,
        )
        """

    def testPagePlayerRatingHistory(self):
        """Test PagePlayerRatingHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
