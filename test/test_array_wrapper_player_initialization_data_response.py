# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.array_wrapper_player_initialization_data_response import ArrayWrapperPlayerInitializationDataResponse

class TestArrayWrapperPlayerInitializationDataResponse(unittest.TestCase):
    """ArrayWrapperPlayerInitializationDataResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayWrapperPlayerInitializationDataResponse:
        """Test ArrayWrapperPlayerInitializationDataResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayWrapperPlayerInitializationDataResponse`
        """
        model = ArrayWrapperPlayerInitializationDataResponse()
        if include_optional:
            return ArrayWrapperPlayerInitializationDataResponse(
                status = 'SUCCESS',
                message = 'Show this message to user.',
                results = [
                    dupr_backend.models.player_initialization_data_response.PlayerInitializationDataResponse(
                        player_id = '', 
                        player_name = '', 
                        initialization_status = '', 
                        days_left_for_initialization = 56, 
                        event_format = '', 
                        qualification_score = 1.337, )
                    ]
            )
        else:
            return ArrayWrapperPlayerInitializationDataResponse(
        )
        """

    def testArrayWrapperPlayerInitializationDataResponse(self):
        """Test ArrayWrapperPlayerInitializationDataResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
