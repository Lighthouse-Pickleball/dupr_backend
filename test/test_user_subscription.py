# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.user_subscription import UserSubscription

class TestUserSubscription(unittest.TestCase):
    """UserSubscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserSubscription:
        """Test UserSubscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserSubscription`
        """
        model = UserSubscription()
        if include_optional:
            return UserSubscription(
                user_id = 56,
                dupr_id = '',
                cost = 1.337,
                billing_period = 'WEEKLY',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                renewal_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                is_active = True
            )
        else:
            return UserSubscription(
                user_id = 56,
                dupr_id = '',
                cost = 1.337,
                billing_period = 'WEEKLY',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                renewal_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                is_active = True,
        )
        """

    def testUserSubscription(self):
        """Test UserSubscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
