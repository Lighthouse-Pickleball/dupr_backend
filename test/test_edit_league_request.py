# coding: utf-8

"""
    DUPR Backend APIs

    Internal RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_backend.models.edit_league_request import EditLeagueRequest

class TestEditLeagueRequest(unittest.TestCase):
    """EditLeagueRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EditLeagueRequest:
        """Test EditLeagueRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EditLeagueRequest`
        """
        model = EditLeagueRequest()
        if include_optional:
            return EditLeagueRequest(
                league_id = 45785789,
                user_id = 45785789,
                league_name = 'Stillwater Pickleball',
                media_id = 4684651981,
                liability_waiver_id = 4684651981,
                member_fee = 500,
                non_member_fee = 500,
                long_description = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                short_description = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                additional_information = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                refund_policy = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                safety_policy = dupr_backend.models.league_content_request.LeagueContentRequest(
                    header = '<h1>header</h1>', 
                    header_type = 'text/html', 
                    content = '<h1>content</h1>', 
                    content_type = 'text/html', 
                    footer = '<h1>footer</h1>', 
                    footer_type = 'text/html', 
                    content_id = 45785789, ),
                address_id = 5156151658,
                type = 'FLEX',
                attributes = {
                    'key' : dupr_backend.models.attribute.Attribute(
                        value = 'String', 
                        get_comment = 'Contact person name, if provided.', 
                        get_children = {
                            'key' : dupr_backend.models.attribute.Attribute(
                                value = 'String', 
                                get_comment = 'Contact person name, if provided.', )
                            }, )
                    },
                membership_permission = 'OPEN_TO_ALL/CLUB_MEMBERS',
                advertise_start = 'yyyy-mm-dd',
                advertise_end = 'yyyy-mm-dd',
                status = 'ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED',
                registration_url = 'https://mydupr.com/register',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return EditLeagueRequest(
                league_id = 45785789,
                user_id = 45785789,
                league_name = 'Stillwater Pickleball',
                non_member_fee = 500,
                address_id = 5156151658,
        )
        """

    def testEditLeagueRequest(self):
        """Test EditLeagueRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
